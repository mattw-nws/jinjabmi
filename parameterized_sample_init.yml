library:  !include sample_library.yml

# You could do "recipes" with anchors, omitting `name`, it will work the same...in a single file!
#timestep_accum: &timestep_accum
#  output: True
#  type: double
#  expression: >
#    {~rate_var~}.value * (time.last_update_delta / 3600.0)

variables:
  mm_h_rate_1:
    init: 5
    input: True
    type: double
    units: "mm/h"

  mm_h_rate_2:
    init: 7
    input: True
    type: double
    units: "mm/h"

  mm_accum_1:
    #<<: *timestep_accum
    units: "mm"
    recipe:
      # recipe name and `recipes` in the library file is necessary when using !include ...
      name: timestep_accum 
      substitutions:
        rate_var: mm_h_rate_1

  mm_accum_2:
    #<<: *timestep_accum
    units: "mm"
    recipe:
      name: timestep_accum
      substitutions:
        rate_var: mm_h_rate_2

  sbc:
    output: True
    type: double
    expression:
      constants.stefan_boltzmann    